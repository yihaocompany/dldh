<?php

namespace Dldh\Modules\Backend\Controllers;
use Phalcon\Mvc\View;
use Phalcon\Mvc\Model\Query\Builder as QueryBuilder;
use Dldh\Models\Worker;

class WorkersController extends ControllerLoginBase
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function indexAction(){
        $page =intval($this->request->get('page'));
        $limit =3;
        $page = $page > 0 ? $page: 1 ;
        $offset = ($page - 1) * $limit;
        $search=trim($this->request->get('search'));
        $conditions = " realname like  :search:   or    phone like  :search:";
        $parameters = array(
            'search' =>'%'.$search.'%',
        );
        $totalRows=\Dldh\Models\Worker::count(array(
            $conditions,
            "bind" => $parameters));
        $totalPage=ceil($totalRows/$limit);
        $listpage=$page>=$totalPage?0:$totalPage;
        $dispalayPage=4;
        $endpage=($page+$dispalayPage)>=$totalPage?$totalPage:($page+$dispalayPage);
        $prepage=$page==1?0:$page-1;
        $nextpage=$page>=$totalPage?0:$page+1;
        $first=$page>1?1:0;
        $list =\Dldh\Models\Worker::find(array(
            $conditions,
            "bind" => $parameters,
            'limit' => array('number' => $limit, 'offset' => $offset) ))->toArray();

        $page_r=null;
        for ($x=$page; $x<=$endpage; $x++) {
            $page_r[] =$x;
        }
        $page_rang=$page_r;
        $this->view->setVars(
            array(
             'list'=>$list,
             'totalrows'=>$totalRows,
             'pager'=>$page_rang,
             'current'=>$page,
             'first'=>$first,
              'last'=>$listpage,
              'pre'=>$prepage,
              'next'=>$nextpage,
                'url'=>"/backend/workers/index/?search=".$search.'&page=',
        )
        );
    }
    public function statusAction(){

        try{
            if($this->request->getPost()){
                $id=$this->request->getPost('id');
                $status=$this->request->getPost('status');
                $con= \Dldh\Models\Worker::findFirst('id='.$id[0]);
                    $con->setStatus($status);
                    $return=$con->save();
                    if($return){
                        exit($this->ajax_return('修改成功','1'));
                    }else{
                        exit($this->ajax_return('修改失败','0'));
                    }
            }else{
                exit($this->ajax_return('非法请求','0'));
            }
        }catch (\Exception $e){
            exit($this->ajax_return('发生错误','0'));
        }
    }

   public function updateworkerAction(){
       try{
           $d=$this->request->getPost();
           if($d){
               $newcon=\Dldh\Models\Worker::findFirst('username="'.$d['username'].'" and id<>'.$d['id']);
               if($newcon){
                   exit($this->ajax_return('用户名已用','0'));
               }

               $con= \Dldh\Models\Worker::findFirst('id='.$d['id']);
               if($con){
                   $con->setEmail($d['email']);
                   $con->setHead($d['head']);
                   $con->setPhone($d['phone']);
                   $con->setRealname($d['realname']);
                   $con->setUsername($d['username']);
                   $con->setWeixin($d['weixin']);
                   $con->setStatus($d['status']);
                   $con->setQq($d['qq']);
                   $return=$con->save();

                   if($return){
                       exit($this->ajax_return('修改成功','1'));
                   }else{
                       exit($this->ajax_return('修改失败','0'));
                   }
               }else{
                   if($d['id']==0){
                       $newcon=\Dldh\Models\Worker::findFirst('username="'.$d['username'].'"');
                       if($newcon){
                           exit($this->ajax_return('用户名已用','0'));
                       }
                       $con= new  \Dldh\Models\Worker();
                       $con->setId($d['id']);
                       $con->setEmail($d['email']);
                       $con->setHead($d['head']);
                       $con->setPassword(md5('122345678'));
                       $con->setPhone($d['phone']);
                       $con->setRealname($d['realname']);
                       $con->setUsername($d['username']);
                       $con->setWeixin($d['weixin']);
                       $con->setStatus($d['status']);
                       $con->setQq($d['qq']);
                       $returnid=$con->save();
                       if($returnid){
                           exit($this->ajax_return('增加成功(密码为:12345678)','1',array('dataid'=>$con->getId())));
                       }else{
                           exit($this->ajax_return('增加失败','0'));
                       }
                   }else{
                       exit($this->ajax_return('发生错误','0'));
                   }

               }

           }else{
               exit($this->ajax_return('非法请求','0'));
           }
       }catch (\Exception $e){
           exit($this->ajax_return('发生错误','0'));
       }
   }

   public  function signAction(){
       date_default_timezone_set ("Asia/Chongqing");
       $date=$this->request->get('data');
       $y=date("Y");
       $m=date("m");
       $d=date("d");
       $datestring=$y."-".$m."-".$d;
       $date=$date!=""?$date:$datestring;

       $builder = new QueryBuilder();
       $builder -> from(['begin_workersign'=> '\Dldh\Models\WorkerSign']);
       $builder -> innerJoin('Dldh\Models\WorkerSign', 'begin_workersign.worker_id = end_workersign.worker_id','end_workersign');
       $builder -> innerJoin('Dldh\Models\Worker', 'worker.id = end_workersign.worker_id','worker');
       $builder -> where('begin_workersign.id<>end_workersign.id  and begin_workersign.type=1 and   end_workersign.type=0  and  begin_workersign.dateflag =end_workersign.dateflag and begin_workersign.dateflag=:dateflag: ',array('dateflag' =>$datestring));

       $builder -> columns([
                 'begin_workersign.worker_id',
                'begin_workersign.dateflag as begin_date',
                'end_workersign.dateflag as end_date',
                'worker.realname as realname',
                'end_workersign.type as end_type',
                'begin_workersign.type  as begin_type',
                'begin_workersign.creat_at  as begin_create',
                'end_workersign.creat_at as end_create'
             ]);

        $query = $builder->getQuery();
       $list = $query->execute();
       $this->view->setVars(array('list'=>$list,'date'=>$date));

   }

}

